# -------------------------------------------------------------------
# Темка:
# __getstate__
# __setstate__
# что означают эти методы в питон

# Метод __getstate__ является частью протокола сериализации в Python и используется при сериализации
# объектов с помощью модуля pickle. Когда объект сериализуется с помощью pickle.dump() или pickle.dumps(),
# метод __getstate__ вызывается у объекта для определения (состояния), которое должно быть сохранено.

# Обычно метод __getstate__ определяет, какие атрибуты объекта должны быть сериализованы. Он должен
# возвращать словарь, содержащий состояние объекта, которое нужно сохранить. Этот словарь будет передан
# в метод __setstate__ при десериализации объекта.

# Пример использования метода __getstate__:

# import pickle
#
#
# class MyClass:
#     def __init__(self, x, y):
#         self.x = x
#         self.y = y
#
#     def __getstate__(self):
#         # Сохраняем только атрибут x
#         return {'x': self.x}
#
#     def __setstate__(self, state):
#         # Восстанавливаем состояние объекта (x) из переданного словаря
#         self.x = state['x']
#
#
# obj = MyClass(10, 20)
# sob = pickle.dumps(obj)
# print(sob)

# Результат:
# b'\x80\x04\x95%\x00\x00\x00\x00\x00\x00\x00\x8c\x08__main__\x94\x8c\x07MyClass\x94\x93\x94)\x81\x94}\x94\x8c\x01x\
# x94K\nsb.'

# В этом примере метод __getstate__ определяет, что должен быть сохранен только атрибут (x) объекта MyClass,
# поэтому при сериализации будет сохранен только атрибут (x), а атрибут (y) будет проигнорирован.

# -------------------------------------------------------------------

# Что такое метод dump в Питон * * *

# Метод dump() в Python обычно используется для записи сериализованных данных в файл. Этот метод доступен в
# различных модулях Python, таких, как pickle, json, yaml и других.

# Например, в модуле pickle метод dump() используется для записи сериализованных объектов Python в файл:

# import pickle
#
# data = {'name': 'Alice', 'age': 30}
#
# # Открываем файл для записи бинарных данных
# with open('data.pkl', 'wb') as f:
#     pickle.dump(data, f)


# В этом примере объект data сериализуется с помощью pickle.dump() и сохраняется в файл data.pkl в бинарном формате.

# Аналогично, в модуле json метод dump() используется для записи сериализованных данных в файл в формате JSON:

# import json
#
# data = {'name': 'Bob', 'age': 25}
#
# # Открываем файл для записи данных в формате JSON
# with open('data.json', 'w') as f:
#     json.dump(data, f)


# Здесь объект data сериализуется с помощью json.dump() и сохраняется в файл data.json в формате JSON.

# Таким образом, метод dump() в Python обеспечивает запись сериализованных данных в файл, что позволяет
# сохранить данные для последующего использования.


